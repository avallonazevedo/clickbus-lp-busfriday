(()=>{var e={304:function(e){var t;t=function(){var e=JSON.parse('{"$":"dollar","%":"percent","&":"and","<":"less",">":"greater","|":"or","¢":"cent","£":"pound","¤":"currency","¥":"yen","©":"(c)","ª":"a","®":"(r)","º":"o","À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","Æ":"AE","Ç":"C","È":"E","É":"E","Ê":"E","Ë":"E","Ì":"I","Í":"I","Î":"I","Ï":"I","Ð":"D","Ñ":"N","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","Ø":"O","Ù":"U","Ú":"U","Û":"U","Ü":"U","Ý":"Y","Þ":"TH","ß":"ss","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","æ":"ae","ç":"c","è":"e","é":"e","ê":"e","ë":"e","ì":"i","í":"i","î":"i","ï":"i","ð":"d","ñ":"n","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","ø":"o","ù":"u","ú":"u","û":"u","ü":"u","ý":"y","þ":"th","ÿ":"y","Ā":"A","ā":"a","Ă":"A","ă":"a","Ą":"A","ą":"a","Ć":"C","ć":"c","Č":"C","č":"c","Ď":"D","ď":"d","Đ":"DJ","đ":"dj","Ē":"E","ē":"e","Ė":"E","ė":"e","Ę":"e","ę":"e","Ě":"E","ě":"e","Ğ":"G","ğ":"g","Ģ":"G","ģ":"g","Ĩ":"I","ĩ":"i","Ī":"i","ī":"i","Į":"I","į":"i","İ":"I","ı":"i","Ķ":"k","ķ":"k","Ļ":"L","ļ":"l","Ľ":"L","ľ":"l","Ł":"L","ł":"l","Ń":"N","ń":"n","Ņ":"N","ņ":"n","Ň":"N","ň":"n","Ō":"O","ō":"o","Ő":"O","ő":"o","Œ":"OE","œ":"oe","Ŕ":"R","ŕ":"r","Ř":"R","ř":"r","Ś":"S","ś":"s","Ş":"S","ş":"s","Š":"S","š":"s","Ţ":"T","ţ":"t","Ť":"T","ť":"t","Ũ":"U","ũ":"u","Ū":"u","ū":"u","Ů":"U","ů":"u","Ű":"U","ű":"u","Ų":"U","ų":"u","Ŵ":"W","ŵ":"w","Ŷ":"Y","ŷ":"y","Ÿ":"Y","Ź":"Z","ź":"z","Ż":"Z","ż":"z","Ž":"Z","ž":"z","Ə":"E","ƒ":"f","Ơ":"O","ơ":"o","Ư":"U","ư":"u","ǈ":"LJ","ǉ":"lj","ǋ":"NJ","ǌ":"nj","Ș":"S","ș":"s","Ț":"T","ț":"t","ə":"e","˚":"o","Ά":"A","Έ":"E","Ή":"H","Ί":"I","Ό":"O","Ύ":"Y","Ώ":"W","ΐ":"i","Α":"A","Β":"B","Γ":"G","Δ":"D","Ε":"E","Ζ":"Z","Η":"H","Θ":"8","Ι":"I","Κ":"K","Λ":"L","Μ":"M","Ν":"N","Ξ":"3","Ο":"O","Π":"P","Ρ":"R","Σ":"S","Τ":"T","Υ":"Y","Φ":"F","Χ":"X","Ψ":"PS","Ω":"W","Ϊ":"I","Ϋ":"Y","ά":"a","έ":"e","ή":"h","ί":"i","ΰ":"y","α":"a","β":"b","γ":"g","δ":"d","ε":"e","ζ":"z","η":"h","θ":"8","ι":"i","κ":"k","λ":"l","μ":"m","ν":"n","ξ":"3","ο":"o","π":"p","ρ":"r","ς":"s","σ":"s","τ":"t","υ":"y","φ":"f","χ":"x","ψ":"ps","ω":"w","ϊ":"i","ϋ":"y","ό":"o","ύ":"y","ώ":"w","Ё":"Yo","Ђ":"DJ","Є":"Ye","І":"I","Ї":"Yi","Ј":"J","Љ":"LJ","Њ":"NJ","Ћ":"C","Џ":"DZ","А":"A","Б":"B","В":"V","Г":"G","Д":"D","Е":"E","Ж":"Zh","З":"Z","И":"I","Й":"J","К":"K","Л":"L","М":"M","Н":"N","О":"O","П":"P","Р":"R","С":"S","Т":"T","У":"U","Ф":"F","Х":"H","Ц":"C","Ч":"Ch","Ш":"Sh","Щ":"Sh","Ъ":"U","Ы":"Y","Ь":"","Э":"E","Ю":"Yu","Я":"Ya","а":"a","б":"b","в":"v","г":"g","д":"d","е":"e","ж":"zh","з":"z","и":"i","й":"j","к":"k","л":"l","м":"m","н":"n","о":"o","п":"p","р":"r","с":"s","т":"t","у":"u","ф":"f","х":"h","ц":"c","ч":"ch","ш":"sh","щ":"sh","ъ":"u","ы":"y","ь":"","э":"e","ю":"yu","я":"ya","ё":"yo","ђ":"dj","є":"ye","і":"i","ї":"yi","ј":"j","љ":"lj","њ":"nj","ћ":"c","ѝ":"u","џ":"dz","Ґ":"G","ґ":"g","Ғ":"GH","ғ":"gh","Қ":"KH","қ":"kh","Ң":"NG","ң":"ng","Ү":"UE","ү":"ue","Ұ":"U","ұ":"u","Һ":"H","һ":"h","Ә":"AE","ә":"ae","Ө":"OE","ө":"oe","฿":"baht","ა":"a","ბ":"b","გ":"g","დ":"d","ე":"e","ვ":"v","ზ":"z","თ":"t","ი":"i","კ":"k","ლ":"l","მ":"m","ნ":"n","ო":"o","პ":"p","ჟ":"zh","რ":"r","ს":"s","ტ":"t","უ":"u","ფ":"f","ქ":"k","ღ":"gh","ყ":"q","შ":"sh","ჩ":"ch","ც":"ts","ძ":"dz","წ":"ts","ჭ":"ch","ხ":"kh","ჯ":"j","ჰ":"h","Ẁ":"W","ẁ":"w","Ẃ":"W","ẃ":"w","Ẅ":"W","ẅ":"w","ẞ":"SS","Ạ":"A","ạ":"a","Ả":"A","ả":"a","Ấ":"A","ấ":"a","Ầ":"A","ầ":"a","Ẩ":"A","ẩ":"a","Ẫ":"A","ẫ":"a","Ậ":"A","ậ":"a","Ắ":"A","ắ":"a","Ằ":"A","ằ":"a","Ẳ":"A","ẳ":"a","Ẵ":"A","ẵ":"a","Ặ":"A","ặ":"a","Ẹ":"E","ẹ":"e","Ẻ":"E","ẻ":"e","Ẽ":"E","ẽ":"e","Ế":"E","ế":"e","Ề":"E","ề":"e","Ể":"E","ể":"e","Ễ":"E","ễ":"e","Ệ":"E","ệ":"e","Ỉ":"I","ỉ":"i","Ị":"I","ị":"i","Ọ":"O","ọ":"o","Ỏ":"O","ỏ":"o","Ố":"O","ố":"o","Ồ":"O","ồ":"o","Ổ":"O","ổ":"o","Ỗ":"O","ỗ":"o","Ộ":"O","ộ":"o","Ớ":"O","ớ":"o","Ờ":"O","ờ":"o","Ở":"O","ở":"o","Ỡ":"O","ỡ":"o","Ợ":"O","ợ":"o","Ụ":"U","ụ":"u","Ủ":"U","ủ":"u","Ứ":"U","ứ":"u","Ừ":"U","ừ":"u","Ử":"U","ử":"u","Ữ":"U","ữ":"u","Ự":"U","ự":"u","Ỳ":"Y","ỳ":"y","Ỵ":"Y","ỵ":"y","Ỷ":"Y","ỷ":"y","Ỹ":"Y","ỹ":"y","‘":"\'","’":"\'","“":"\\"","”":"\\"","†":"+","•":"*","…":"...","₠":"ecu","₢":"cruzeiro","₣":"french franc","₤":"lira","₥":"mill","₦":"naira","₧":"peseta","₨":"rupee","₩":"won","₪":"new shequel","₫":"dong","€":"euro","₭":"kip","₮":"tugrik","₯":"drachma","₰":"penny","₱":"peso","₲":"guarani","₳":"austral","₴":"hryvnia","₵":"cedi","₸":"kazakhstani tenge","₹":"indian rupee","₺":"turkish lira","₽":"russian ruble","₿":"bitcoin","℠":"sm","™":"tm","∂":"d","∆":"delta","∑":"sum","∞":"infinity","♥":"love","元":"yuan","円":"yen","﷼":"rial"}'),t=JSON.parse('{"de":{"Ä":"AE","ä":"ae","Ö":"OE","ö":"oe","Ü":"UE","ü":"ue"},"vi":{"Đ":"D","đ":"d"}}');function n(n,i){if("string"!=typeof n)throw new Error("slugify: string argument expected");var s=t[(i="string"==typeof i?{replacement:i}:i||{}).locale]||{},o=void 0===i.replacement?"-":i.replacement,l=n.split("").reduce((function(t,n){return t+(s[n]||e[n]||n).replace(i.remove||/[^\w\s$*_+~.()'"!\-:@]+/g,"")}),"").trim().replace(new RegExp("[\\s"+o+"]+","g"),o);return i.lower&&(l=l.toLowerCase()),i.strict&&(l=l.replace(new RegExp("[^a-zA-Z0-9"+o+"]","g"),"").replace(new RegExp("[\\s"+o+"]+","g"),o)),l}return n.extend=function(t){for(var n in t)e[n]=t[n]},n},e.exports=t(),e.exports.default=t()}},t={};function n(i){if(t[i])return t[i].exports;var s=t[i]={exports:{}};return e[i].call(s.exports,s,s.exports,n),s.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var i in t)n.o(t,i)&&!n.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";var e=n(304),t=n.n(e);const i=document.getElementById("clickbus-landing-page-wrapper"),s=document.querySelectorAll(".bf-accordion-title"),o=document.querySelector(".bf-go-to-top"),l=document.getElementById("bf-filter-options"),r=document.querySelector(".bf-return"),a=document.getElementById("bf-origin-select"),c=document.querySelector("body"),d=(document.querySelectorAll(".bf-prices-and-dates"),document.getElementById("bf-mask-modal")),u=document.getElementById("bf-modal-dates"),h=null==u?void 0:u.querySelector("button"),g=document.querySelector(".bf-list"),p=document.getElementById("bf-update-origins"),b=document.getElementById("apply-origins-options"),f=document.getElementById("bf-all"),m=document.getElementById("clear-origins-options"),y=document.querySelector(".bf-results"),v=document.querySelector("#bf-origin-select span"),E=null==u?void 0:u.querySelector("header h3 span"),S=(null==u||u.querySelector("table thead tr"),null==u?void 0:u.querySelector("table tbody")),A=document.getElementById("bf-sort"),O="bf-all";const k=routes,L=k.map((e=>e.origin));if(!i)throw new Error(["The page's main wrapper could not be found. Please wrap the entire",'application within an element with id "#clickbus-landing-page-wrapper".',"So we guarantee that we will not have any kind of conflict."].join(" "));new class{constructor({routes:e,origins:t}){this.collator=new Intl.Collator("pt-BR",{numeric:!0,sensitivity:"base"}),this.originsSelected=0,this.routes=e,this.origins=t,this.originsTotal=t.length,this.render(),this.renderCheckbox(),this.generateSelectedQuantity(this.originsTotal),this.attachApplyButtonEvents()}updateDOMSelectors(e){this.dom=Object.assign(Object.assign({},this.dom),e)}setOriginsSelected(e){this.originsSelected=e}resetOriginsSelected(){this.setOriginsSelected(0)}selectAllOrigins(){if(this.originsSelected!==this.originsTotal)return this.dom.checkboxes.forEach((e=>e.checked=!0)),void this.setOriginsSelected(this.originsTotal);this.clearCheckboxOptions()}toggleApplyButtonEnabling(e){if(e)return null==b?void 0:b.removeAttribute("disabled");null==b||b.setAttribute("disabled","true")}toggleApplyButtonBySelected(){if(this.originsSelected>0)return this.toggleApplyButtonEnabling(!0);this.toggleApplyButtonEnabling(!1)}clearCheckboxOptions(){this.dom.checkboxes.forEach((e=>e.checked=!1)),this.toggleApplyButtonEnabling(!1),this.resetOriginsSelected()}renderCheckbox(){this.origins.forEach((e=>{const n=t()(e),i=`\n      <label class="bf-label-selector" for="${n}">\n          ${e}\n          <input type="checkbox" value="${e}" id="${n}">\n          <span></span>\n      </label>`;null==p||p.insertAdjacentHTML("beforeend",i)})),this.updateDOMSelectors({originSelectors:document.querySelectorAll("#bf-update-origins label"),checkboxes:document.querySelectorAll(".bf-label-selector input")}),null==m||m.addEventListener("click",(()=>{this.clearCheckboxOptions()})),this.attachCheckboxEvents()}toggleCheckboxAllSelected(){this.originsSelected!==this.originsTotal?null==f||(f.checked=!1):null==f||(f.checked=!0)}attachCheckboxEvents(){this.updateDOMSelectors({checkboxes:document.querySelectorAll(".bf-label-selector input")}),this.dom.originSelectors.forEach((e=>{e.addEventListener("change",(()=>{const t=e.getAttribute("for"),n=document.getElementById(t).checked;t===O?this.selectAllOrigins():n?this.setOriginsSelected(this.originsSelected+1):this.setOriginsSelected(this.originsSelected-1),this.toggleApplyButtonBySelected(),this.toggleCheckboxAllSelected()}))}))}generateCurrentState(e){const t=e.length===this.originsTotal?"Todas":e.length<=1?e[0]:`${(e=>e.length>=20?e.split(",")[0].concat(" ..."):e)(e[0])} + ${e.length-1}`;null==v||(v.innerHTML=t)}generateSelectedQuantity(e){if("number"==typeof e)return null==y?void 0:y.innerHTML=`${e} ${1===e?"resultado":"resultados"}`;const t=`${e.length} ${1===e.length?"resultado":"resultados"}`;null==y||(y.innerHTML=t)}showAllDates(){this.dom.showAllDatesTriggers.forEach((e=>{e.addEventListener("click",(()=>{const t=parseInt(e.getAttribute("data-route")),n=this.routes.filter((e=>e.id===t))[0],i=n.origin.split(",")[0],s=n.destination.split(",")[0];E.innerHTML=`${i} x ${s}`,S.innerHTML="",n.availableDates.forEach((e=>{const t=`<tr>${e.map((e=>`<td>${e.date}</td>`)).join("")}</tr>`;null==S||S.insertAdjacentHTML("beforeend",t)})),null==u||u.classList.add("bf-active"),null==d||d.classList.add("bf-active"),c.classList.add("no-navigation-enabled")}))}))}sortItems(e){if("default"===e)return this.render(this.currentRoutes,!1);const t=[...this.currentRoutes].sort(((e,t)=>this.collator.compare(e.price,t.price))),n="price-lower"===e?t:t.reverse();this.render(n,!1)}saveItems(){this.updateDOMSelectors({selectedCheckbox:document.querySelectorAll(".bf-label-selector input:checked")});const e=Array.from(this.dom.selectedCheckbox).filter((e=>e.getAttribute("id")!==O)).map((e=>e.value)),t=e.length===this.originsTotal||0===e.length?this.routes:this.routes.filter((t=>e.includes(t.origin))),n=A.value;this.render(t),this.sortItems(n),this.generateCurrentState(e),this.generateSelectedQuantity(e),((e=!1)=>{null==l||l.classList.remove("bf-active"),c.classList.remove("no-navigation-enabled"),e&&setTimeout((()=>{scrollTo({left:0,top:null==g?void 0:g.offsetTop,behavior:"smooth"})}),500)})(!0)}attachApplyButtonEvents(){null==b||b.addEventListener("click",(()=>{this.saveItems()}))}render(e=this.routes,t=!0){t&&(this.currentRoutes=e),null==g||(g.innerHTML=""),e.forEach((e=>{const t=`<li>\n          <div class="bf-origin-destination">\n              <span class="bf-origin">\n                  <i class="icon-origin"></i>\n                  ${e.origin}\n              </span>\n              <span class="bf-destination">\n                  <i class="icon-destination"></i>\n                  ${e.destination}\n              </span>\n          </div>\n          \x3c!-- /.bf-origin-destination --\x3e\n          <div class="bf-prices-and-dates">\n              <span>R$ ${e.price}</span>\n              <button data-route="${e.id}" type="button">Ver datas</button>\n          </div>\n          \x3c!-- /.bf-prices-and-dates --\x3e\n      </li>`;null==g||g.insertAdjacentHTML("beforeend",t),this.updateDOMSelectors({showAllDatesTriggers:document.querySelectorAll(".bf-prices-and-dates button")})})),this.updateDOMSelectors({showAllDatesTriggers:document.querySelectorAll(".bf-prices-and-dates button")}),this.showAllDates(),null==A||A.addEventListener("change",(()=>{const e=A.value;this.sortItems(e)}))}}({routes:k,origins:L}),s.forEach((e=>{e.addEventListener("click",(()=>{var t;e.classList.toggle("bf-active"),null===(t=e.nextElementSibling)||void 0===t||t.classList.toggle("bf-active")}))})),null==o||o.addEventListener("click",(()=>{scrollTo({left:0,top:0,behavior:"smooth"})})),null==r||r.addEventListener("click",(()=>{null==l||l.classList.remove("bf-active"),c.classList.remove("no-navigation-enabled")})),null==a||a.addEventListener("click",(()=>{null==l||l.classList.add("bf-active"),c.classList.add("no-navigation-enabled")})),null==h||h.addEventListener("click",(e=>{e.preventDefault(),null==d||d.classList.remove("bf-active"),null==u||u.classList.remove("bf-active"),c.classList.remove("no-navigation-enabled")}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9scC1idXNmcmlkYXkvLi9ub2RlX21vZHVsZXMvc2x1Z2lmeS9zbHVnaWZ5LmpzIiwid2VicGFjazovL2xwLWJ1c2ZyaWRheS93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9scC1idXNmcmlkYXkvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vbHAtYnVzZnJpZGF5L3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly9scC1idXNmcmlkYXkvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9scC1idXNmcmlkYXkvLi9zcmMvY29uc3RhbnRzL2NvbnN0YW50cy50cyIsIndlYnBhY2s6Ly9scC1idXNmcmlkYXkvLi9zcmMvY29tcG9uZW50cy9DYXJkT2ZmZXJzLnRzIiwid2VicGFjazovL2xwLWJ1c2ZyaWRheS8uL3NyYy9pbmRleC50cyJdLCJuYW1lcyI6WyJmYWN0b3J5IiwiY2hhck1hcCIsIkpTT04iLCJwYXJzZSIsImxvY2FsZXMiLCJyZXBsYWNlIiwic3RyaW5nIiwib3B0aW9ucyIsIkVycm9yIiwibG9jYWxlIiwicmVwbGFjZW1lbnQiLCJ1bmRlZmluZWQiLCJzbHVnIiwic3BsaXQiLCJyZWR1Y2UiLCJyZXN1bHQiLCJjaCIsInJlbW92ZSIsInRyaW0iLCJSZWdFeHAiLCJsb3dlciIsInRvTG93ZXJDYXNlIiwic3RyaWN0IiwiZXh0ZW5kIiwiY3VzdG9tTWFwIiwia2V5IiwibW9kdWxlIiwiZXhwb3J0cyIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsIl9fd2VicGFja19tb2R1bGVzX18iLCJjYWxsIiwibiIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkIiwiYSIsImRlZmluaXRpb24iLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0Iiwib2JqIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwibGFuZGluZ1BhZ2VDb250ZW50IiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImFjY29yZGlvblRpdGxlcyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJiYWNrVG9Ub3AiLCJxdWVyeVNlbGVjdG9yIiwiZmlsdGVyT3B0aW9uc1dyYXBwZXIiLCJjbG9zZUZpbHRlck9wdGlvbnNXcmFwcGVyIiwib3BlbkZpbHRlck9wdGlvbnNXcmFwcGVyIiwib2tCdXR0b24iLCJsaXN0IiwiZm9ybU9yaWdpbnMiLCJhcHBseUJ1dHRvbiIsImFsbE9yaWdpbnMiLCJjbGVhck9yaWdpbnMiLCJyZXN1bHRzIiwidHJpZ2dlclNlbGVjdCIsInRpdGxlTW9kYWwiLCJ0YWJsZURhdGVzQm9keSIsInNlbGVjdFNvcnQiLCJDSEVDS0JPWF9BTEwiLCJhbGxSb3V0ZXMiLCJyb3V0ZXMiLCJvcmlnaW5zIiwibWFwIiwicm91dGUiLCJvcmlnaW4iLCJqb2luIiwidGhpcyIsImNvbGxhdG9yIiwiSW50bCIsIkNvbGxhdG9yIiwibnVtZXJpYyIsInNlbnNpdGl2aXR5Iiwib3JpZ2luc1NlbGVjdGVkIiwib3JpZ2luc1RvdGFsIiwibGVuZ3RoIiwicmVuZGVyIiwicmVuZGVyQ2hlY2tib3giLCJnZW5lcmF0ZVNlbGVjdGVkUXVhbnRpdHkiLCJhdHRhY2hBcHBseUJ1dHRvbkV2ZW50cyIsIm5leHQiLCJkb20iLCJhc3NpZ24iLCJjdXJyZW50U2VsZWN0ZWQiLCJzZXRPcmlnaW5zU2VsZWN0ZWQiLCJjaGVja2JveGVzIiwiZm9yRWFjaCIsImlucHV0IiwiY2hlY2tlZCIsImNsZWFyQ2hlY2tib3hPcHRpb25zIiwic3RhdHVzIiwicmVtb3ZlQXR0cmlidXRlIiwic2V0QXR0cmlidXRlIiwidG9nZ2xlQXBwbHlCdXR0b25FbmFibGluZyIsInJlc2V0T3JpZ2luc1NlbGVjdGVkIiwib3V0cHV0IiwiaW5zZXJ0QWRqYWNlbnRIVE1MIiwidXBkYXRlRE9NU2VsZWN0b3JzIiwib3JpZ2luU2VsZWN0b3JzIiwiYWRkRXZlbnRMaXN0ZW5lciIsImF0dGFjaENoZWNrYm94RXZlbnRzIiwic2VsZWN0b3IiLCJpdGVtIiwiZ2V0QXR0cmlidXRlIiwiaXNDaGVja2VkIiwic2VsZWN0QWxsT3JpZ2lucyIsInRvZ2dsZUFwcGx5QnV0dG9uQnlTZWxlY3RlZCIsInRvZ2dsZUNoZWNrYm94QWxsU2VsZWN0ZWQiLCJzZWxlY3RlZCIsInRleHQiLCJjb25jYXQiLCJjdXRUZXh0IiwiaW5uZXJIVE1MIiwic2hvd0FsbERhdGVzVHJpZ2dlcnMiLCJidXR0b24iLCJpZCIsInBhcnNlSW50IiwiZmlsdGVyIiwiZGVzdGluYXRpb24iLCJhdmFpbGFibGVEYXRlcyIsImRhdGVzIiwiZGF0ZSIsInR5cGUiLCJjdXJyZW50Um91dGVzIiwiY29tcGFyZSIsInNvcnQiLCJiIiwicHJpY2UiLCJzb3J0ZWQiLCJyZXZlcnNlIiwic2VsZWN0ZWRDaGVja2JveCIsIkFycmF5IiwiZnJvbSIsInZhbHVlIiwiY2FyZHMiLCJpbmNsdWRlcyIsImN1cnJlbnRTb3J0Iiwic29ydEl0ZW1zIiwiZ2VuZXJhdGVDdXJyZW50U3RhdGUiLCJyZXR1cm5UbyIsImNsYXNzTGlzdCIsInNldFRpbWVvdXQiLCJzY3JvbGxUbyIsImxlZnQiLCJ0b3AiLCJvZmZzZXRUb3AiLCJiZWhhdmlvciIsImhpZGVGaWx0ZXJPcHRpb25zV3JhcHBlciIsInNhdmVJdGVtcyIsInVwZGF0ZSIsImh0bWwiLCJzaG93QWxsRGF0ZXMiLCJ0aXRsZSIsIl9hIiwidG9nZ2xlIiwibmV4dEVsZW1lbnRTaWJsaW5nIiwiYWRkIiwiZSIsInByZXZlbnREZWZhdWx0Il0sIm1hcHBpbmdzIjoiNkJBQ0UsSUFBc0JBLElBWUwsV0FDakIsSUFBSUMsRUFBVUMsS0FBS0MsTUFBTSxvNklBQ3JCQyxFQUFVRixLQUFLQyxNQUFNLHlGQUV6QixTQUFTRSxFQUFTQyxFQUFRQyxHQUN4QixHQUFzQixpQkFBWEQsRUFD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bUJBQW1CLENBQ3BCZ0IscUJBQXNCMUUsU0FBU0csaUJBQWlCLGlDQUVwRHlCLEtBQUtvRixlQUNMN0YsU0FBd0RBLEVBQVd5QyxpQkFBaUIsVUFBVSxLQUMxRixNQUFNa0MsRUFBUTNFLEVBQVcyRSxNQUN6QmxFLEtBQUtzRSxVQUFVSixRQ2hPUixDQUFFeEUsT0FBUUQsRUFBV0UsWUFFcENyQixFQUFnQjZDLFNBQVNrRSxJQUNyQkEsRUFBTXJELGlCQUFpQixTQUFTLEtBQzVCLElBQUlzRCxFQUNKRCxFQUFNWixVQUFVYyxPQUFPLGFBQ2EsUUFBbkNELEVBQUtELEVBQU1HLDBCQUF1QyxJQUFQRixHQUF5QkEsRUFBR2IsVUFBVWMsT0FBTyxtQkFJakcvRyxTQUFzREEsRUFBVXdELGlCQUFpQixTQUFTLEtBQ3RGMkMsU0FBUyxDQUNMQyxLQUFNLEVBQ05DLElBQUssRUFDTEUsU0FBVSxjQUlsQnBHLFNBQXNGQSxFQUEwQnFELGlCQUFpQixTQUFTLEtBQ3RJdEQsU0FBNEVBLEVBQXFCK0YsVUFBVXJJLE9BQU8sYUFDbEgsbUJBQXNCLDRCQUcxQndDLFNBQW9GQSxFQUF5Qm9ELGlCQUFpQixTQUFTLEtBQ25JdEQsU0FBNEVBLEVBQXFCK0YsVUFBVWdCLElBQUksYUFDL0csZ0JBQW1CLDRCQVl2QjVHLFNBQW9EQSxFQUFTbUQsaUJBQWlCLFNBQVUwRCxJQUNwRkEsRUFBRUMsaUJBQ0YsU0FBd0QsbUJBQTRCLGFBQ3BGLFNBQXdELG1CQUE0QixhQUNwRixtQkFBc0IsNkIiLCJmaWxlIjoiY2xpY2tidXMubHAuYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG47KGZ1bmN0aW9uIChuYW1lLCByb290LCBmYWN0b3J5KSB7XG4gIGlmICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoKVxuICAgIG1vZHVsZS5leHBvcnRzWydkZWZhdWx0J10gPSBmYWN0b3J5KClcbiAgfVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICBlbHNlIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHtcbiAgICBkZWZpbmUoZmFjdG9yeSlcbiAgfVxuICBlbHNlIHtcbiAgICByb290W25hbWVdID0gZmFjdG9yeSgpXG4gIH1cbn0oJ3NsdWdpZnknLCB0aGlzLCBmdW5jdGlvbiAoKSB7XG4gIHZhciBjaGFyTWFwID0gSlNPTi5wYXJzZSgne1wiJFwiOlwiZG9sbGFyXCIsXCIlXCI6XCJwZXJjZW50XCIsXCImXCI6XCJhbmRcIixcIjxcIjpcImxlc3NcIixcIj5cIjpcImdyZWF0ZXJcIixcInxcIjpcIm9yXCIsXCLColwiOlwiY2VudFwiLFwiwqNcIjpcInBvdW5kXCIsXCLCpFwiOlwiY3VycmVuY3lcIixcIsKlXCI6XCJ5ZW5cIixcIsKpXCI6XCIoYylcIixcIsKqXCI6XCJhXCIsXCLCrlwiOlwiKHIpXCIsXCLCulwiOlwib1wiLFwiw4BcIjpcIkFcIixcIsOBXCI6XCJBXCIsXCLDglwiOlwiQVwiLFwiw4NcIjpcIkFcIixcIsOEXCI6XCJBXCIsXCLDhVwiOlwiQVwiLFwiw4ZcIjpcIkFFXCIsXCLDh1wiOlwiQ1wiLFwiw4hcIjpcIkVcIixcIsOJXCI6XCJFXCIsXCLDilwiOlwiRVwiLFwiw4tcIjpcIkVcIixcIsOMXCI6XCJJXCIsXCLDjVwiOlwiSVwiLFwiw45cIjpcIklcIixcIsOPXCI6XCJJXCIsXCLDkFwiOlwiRFwiLFwiw5FcIjpcIk5cIixcIsOSXCI6XCJPXCIsXCLDk1wiOlwiT1wiLFwiw5RcIjpcIk9cIixcIsOVXCI6XCJPXCIsXCLDllwiOlwiT1wiLFwiw5hcIjpcIk9cIixcIsOZXCI6XCJVXCIsXCLDmlwiOlwiVVwiLFwiw5tcIjpcIlVcIixcIsOcXCI6XCJVXCIsXCLDnVwiOlwiWVwiLFwiw55cIjpcIlRIXCIsXCLDn1wiOlwic3NcIixcIsOgXCI6XCJhXCIsXCLDoVwiOlwiYVwiLFwiw6JcIjpcImFcIixcIsOjXCI6XCJhXCIsXCLDpFwiOlwiYVwiLFwiw6VcIjpcImFcIixcIsOmXCI6XCJhZVwiLFwiw6dcIjpcImNcIixcIsOoXCI6XCJlXCIsXCLDqVwiOlwiZVwiLFwiw6pcIjpcImVcIixcIsOrXCI6XCJlXCIsXCLDrFwiOlwiaVwiLFwiw61cIjpcImlcIixcIsOuXCI6XCJpXCIsXCLDr1wiOlwiaVwiLFwiw7BcIjpcImRcIixcIsOxXCI6XCJuXCIsXCLDslwiOlwib1wiLFwiw7NcIjpcIm9cIixcIsO0XCI6XCJvXCIsXCLDtVwiOlwib1wiLFwiw7ZcIjpcIm9cIixcIsO4XCI6XCJvXCIsXCLDuVwiOlwidVwiLFwiw7pcIjpcInVcIixcIsO7XCI6XCJ1XCIsXCLDvFwiOlwidVwiLFwiw71cIjpcInlcIixcIsO+XCI6XCJ0aFwiLFwiw79cIjpcInlcIixcIsSAXCI6XCJBXCIsXCLEgVwiOlwiYVwiLFwixIJcIjpcIkFcIixcIsSDXCI6XCJhXCIsXCLEhFwiOlwiQVwiLFwixIVcIjpcImFcIixcIsSGXCI6XCJDXCIsXCLEh1wiOlwiY1wiLFwixIxcIjpcIkNcIixcIsSNXCI6XCJjXCIsXCLEjlwiOlwiRFwiLFwixI9cIjpcImRcIixcIsSQXCI6XCJESlwiLFwixJFcIjpcImRqXCIsXCLEklwiOlwiRVwiLFwixJNcIjpcImVcIixcIsSWXCI6XCJFXCIsXCLEl1wiOlwiZVwiLFwixJhcIjpcImVcIixcIsSZXCI6XCJlXCIsXCLEmlwiOlwiRVwiLFwixJtcIjpcImVcIixcIsSeXCI6XCJHXCIsXCLEn1wiOlwiZ1wiLFwixKJcIjpcIkdcIixcIsSjXCI6XCJnXCIsXCLEqFwiOlwiSVwiLFwixKlcIjpcImlcIixcIsSqXCI6XCJpXCIsXCLEq1wiOlwiaVwiLFwixK5cIjpcIklcIixcIsSvXCI6XCJpXCIsXCLEsFwiOlwiSVwiLFwixLFcIjpcImlcIixcIsS2XCI6XCJrXCIsXCLEt1wiOlwia1wiLFwixLtcIjpcIkxcIixcIsS8XCI6XCJsXCIsXCLEvVwiOlwiTFwiLFwixL5cIjpcImxcIixcIsWBXCI6XCJMXCIsXCLFglwiOlwibFwiLFwixYNcIjpcIk5cIixcIsWEXCI6XCJuXCIsXCLFhVwiOlwiTlwiLFwixYZcIjpcIm5cIixcIsWHXCI6XCJOXCIsXCLFiFwiOlwiblwiLFwixYxcIjpcIk9cIixcIsWNXCI6XCJvXCIsXCLFkFwiOlwiT1wiLFwixZFcIjpcIm9cIixcIsWSXCI6XCJPRVwiLFwixZNcIjpcIm9lXCIsXCLFlFwiOlwiUlwiLFwixZVcIjpcInJcIixcIsWYXCI6XCJSXCIsXCLFmVwiOlwiclwiLFwixZpcIjpcIlNcIixcIsWbXCI6XCJzXCIsXCLFnlwiOlwiU1wiLFwixZ9cIjpcInNcIixcIsWgXCI6XCJTXCIsXCLFoVwiOlwic1wiLFwixaJcIjpcIlRcIixcIsWjXCI6XCJ0XCIsXCLFpFwiOlwiVFwiLFwixaVcIjpcInRcIixcIsWoXCI6XCJVXCIsXCLFqVwiOlwidVwiLFwixapcIjpcInVcIixcIsWrXCI6XCJ1XCIsXCLFrlwiOlwiVVwiLFwixa9cIjpcInVcIixcIsWwXCI6XCJVXCIsXCLFsVwiOlwidVwiLFwixbJcIjpcIlVcIixcIsWzXCI6XCJ1XCIsXCLFtFwiOlwiV1wiLFwixbVcIjpcIndcIixcIsW2XCI6XCJZXCIsXCLFt1wiOlwieVwiLFwixbhcIjpcIllcIixcIsW5XCI6XCJaXCIsXCLFulwiOlwielwiLFwixbtcIjpcIlpcIixcIsW8XCI6XCJ6XCIsXCLFvVwiOlwiWlwiLFwixb5cIjpcInpcIixcIsaPXCI6XCJFXCIsXCLGklwiOlwiZlwiLFwixqBcIjpcIk9cIixcIsahXCI6XCJvXCIsXCLGr1wiOlwiVVwiLFwixrBcIjpcInVcIixcIseIXCI6XCJMSlwiLFwix4lcIjpcImxqXCIsXCLHi1wiOlwiTkpcIixcIseMXCI6XCJualwiLFwiyJhcIjpcIlNcIixcIsiZXCI6XCJzXCIsXCLImlwiOlwiVFwiLFwiyJtcIjpcInRcIixcIsmZXCI6XCJlXCIsXCLLmlwiOlwib1wiLFwizoZcIjpcIkFcIixcIs6IXCI6XCJFXCIsXCLOiVwiOlwiSFwiLFwizopcIjpcIklcIixcIs6MXCI6XCJPXCIsXCLOjlwiOlwiWVwiLFwizo9cIjpcIldcIixcIs6QXCI6XCJpXCIsXCLOkVwiOlwiQVwiLFwizpJcIjpcIkJcIixcIs6TXCI6XCJHXCIsXCLOlFwiOlwiRFwiLFwizpVcIjpcIkVcIixcIs6WXCI6XCJaXCIsXCLOl1wiOlwiSFwiLFwizphcIjpcIjhcIixcIs6ZXCI6XCJJXCIsXCLOmlwiOlwiS1wiLFwizptcIjpcIkxcIixcIs6cXCI6XCJNXCIsXCLOnVwiOlwiTlwiLFwizp5cIjpcIjNcIixcIs6fXCI6XCJPXCIsXCLOoFwiOlwiUFwiLFwizqFcIjpcIlJcIixcIs6jXCI6XCJTXCIsXCLOpFwiOlwiVFwiLFwizqVcIjpcIllcIixcIs6mXCI6XCJGXCIsXCLOp1wiOlwiWFwiLFwizqhcIjpcIlBTXCIsXCLOqVwiOlwiV1wiLFwizqpcIjpcIklcIixcIs6rXCI6XCJZXCIsXCLOrFwiOlwiYVwiLFwizq1cIjpcImVcIixcIs6uXCI6XCJoXCIsXCLOr1wiOlwiaVwiLFwizrBcIjpcInlcIixcIs6xXCI6XCJhXCIsXCLOslwiOlwiYlwiLFwizrNcIjpcImdcIixcIs60XCI6XCJkXCIsXCLOtVwiOlwiZVwiLFwizrZcIjpcInpcIixcIs63XCI6XCJoXCIsXCLOuFwiOlwiOFwiLFwizrlcIjpcImlcIixcIs66XCI6XCJrXCIsXCLOu1wiOlwibFwiLFwizrxcIjpcIm1cIixcIs69XCI6XCJuXCIsXCLOvlwiOlwiM1wiLFwizr9cIjpcIm9cIixcIs+AXCI6XCJwXCIsXCLPgVwiOlwiclwiLFwiz4JcIjpcInNcIixcIs+DXCI6XCJzXCIsXCLPhFwiOlwidFwiLFwiz4VcIjpcInlcIixcIs+GXCI6XCJmXCIsXCLPh1wiOlwieFwiLFwiz4hcIjpcInBzXCIsXCLPiVwiOlwid1wiLFwiz4pcIjpcImlcIixcIs+LXCI6XCJ5XCIsXCLPjFwiOlwib1wiLFwiz41cIjpcInlcIixcIs+OXCI6XCJ3XCIsXCLQgVwiOlwiWW9cIixcItCCXCI6XCJESlwiLFwi0IRcIjpcIlllXCIsXCLQhlwiOlwiSVwiLFwi0IdcIjpcIllpXCIsXCLQiFwiOlwiSlwiLFwi0IlcIjpcIkxKXCIsXCLQilwiOlwiTkpcIixcItCLXCI6XCJDXCIsXCLQj1wiOlwiRFpcIixcItCQXCI6XCJBXCIsXCLQkVwiOlwiQlwiLFwi0JJcIjpcIlZcIixcItCTXCI6XCJHXCIsXCLQlFwiOlwiRFwiLFwi0JVcIjpcIkVcIixcItCWXCI6XCJaaFwiLFwi0JdcIjpcIlpcIixcItCYXCI6XCJJXCIsXCLQmVwiOlwiSlwiLFwi0JpcIjpcIktcIixcItCbXCI6XCJMXCIsXCLQnFwiOlwiTVwiLFwi0J1cIjpcIk5cIixcItCeXCI6XCJPXCIsXCLQn1wiOlwiUFwiLFwi0KBcIjpcIlJcIixcItChXCI6XCJTXCIsXCLQolwiOlwiVFwiLFwi0KNcIjpcIlVcIixcItCkXCI6XCJGXCIsXCLQpVwiOlwiSFwiLFwi0KZcIjpcIkNcIixcItCnXCI6XCJDaFwiLFwi0KhcIjpcIlNoXCIsXCLQqVwiOlwiU2hcIixcItCqXCI6XCJVXCIsXCLQq1wiOlwiWVwiLFwi0KxcIjpcIlwiLFwi0K1cIjpcIkVcIixcItCuXCI6XCJZdVwiLFwi0K9cIjpcIllhXCIsXCLQsFwiOlwiYVwiLFwi0LFcIjpcImJcIixcItCyXCI6XCJ2XCIsXCLQs1wiOlwiZ1wiLFwi0LRcIjpcImRcIixcItC1XCI6XCJlXCIsXCLQtlwiOlwiemhcIixcItC3XCI6XCJ6XCIsXCLQuFwiOlwiaVwiLFwi0LlcIjpcImpcIixcItC6XCI6XCJrXCIsXCLQu1wiOlwibFwiLFwi0LxcIjpcIm1cIixcItC9XCI6XCJuXCIsXCLQvlwiOlwib1wiLFwi0L9cIjpcInBcIixcItGAXCI6XCJyXCIsXCLRgVwiOlwic1wiLFwi0YJcIjpcInRcIixcItGDXCI6XCJ1XCIsXCLRhFwiOlwiZlwiLFwi0YVcIjpcImhcIixcItGGXCI6XCJjXCIsXCLRh1wiOlwiY2hcIixcItGIXCI6XCJzaFwiLFwi0YlcIjpcInNoXCIsXCLRilwiOlwidVwiLFwi0YtcIjpcInlcIixcItGMXCI6XCJcIixcItGNXCI6XCJlXCIsXCLRjlwiOlwieXVcIixcItGPXCI6XCJ5YVwiLFwi0ZFcIjpcInlvXCIsXCLRklwiOlwiZGpcIixcItGUXCI6XCJ5ZVwiLFwi0ZZcIjpcImlcIixcItGXXCI6XCJ5aVwiLFwi0ZhcIjpcImpcIixcItGZXCI6XCJsalwiLFwi0ZpcIjpcIm5qXCIsXCLRm1wiOlwiY1wiLFwi0Z1cIjpcInVcIixcItGfXCI6XCJkelwiLFwi0pBcIjpcIkdcIixcItKRXCI6XCJnXCIsXCLSklwiOlwiR0hcIixcItKTXCI6XCJnaFwiLFwi0ppcIjpcIktIXCIsXCLSm1wiOlwia2hcIixcItKiXCI6XCJOR1wiLFwi0qNcIjpcIm5nXCIsXCLSrlwiOlwiVUVcIixcItKvXCI6XCJ1ZVwiLFwi0rBcIjpcIlVcIixcItKxXCI6XCJ1XCIsXCLSulwiOlwiSFwiLFwi0rtcIjpcImhcIixcItOYXCI6XCJBRVwiLFwi05lcIjpcImFlXCIsXCLTqFwiOlwiT0VcIixcItOpXCI6XCJvZVwiLFwi4Li/XCI6XCJiYWh0XCIsXCLhg5BcIjpcImFcIixcIuGDkVwiOlwiYlwiLFwi4YOSXCI6XCJnXCIsXCLhg5NcIjpcImRcIixcIuGDlFwiOlwiZVwiLFwi4YOVXCI6XCJ2XCIsXCLhg5ZcIjpcInpcIixcIuGDl1wiOlwidFwiLFwi4YOYXCI6XCJpXCIsXCLhg5lcIjpcImtcIixcIuGDmlwiOlwibFwiLFwi4YObXCI6XCJtXCIsXCLhg5xcIjpcIm5cIixcIuGDnVwiOlwib1wiLFwi4YOeXCI6XCJwXCIsXCLhg59cIjpcInpoXCIsXCLhg6BcIjpcInJcIixcIuGDoVwiOlwic1wiLFwi4YOiXCI6XCJ0XCIsXCLhg6NcIjpcInVcIixcIuGDpFwiOlwiZlwiLFwi4YOlXCI6XCJrXCIsXCLhg6ZcIjpcImdoXCIsXCLhg6dcIjpcInFcIixcIuGDqFwiOlwic2hcIixcIuGDqVwiOlwiY2hcIixcIuGDqlwiOlwidHNcIixcIuGDq1wiOlwiZHpcIixcIuGDrFwiOlwidHNcIixcIuGDrVwiOlwiY2hcIixcIuGDrlwiOlwia2hcIixcIuGDr1wiOlwialwiLFwi4YOwXCI6XCJoXCIsXCLhuoBcIjpcIldcIixcIuG6gVwiOlwid1wiLFwi4bqCXCI6XCJXXCIsXCLhuoNcIjpcIndcIixcIuG6hFwiOlwiV1wiLFwi4bqFXCI6XCJ3XCIsXCLhup5cIjpcIlNTXCIsXCLhuqBcIjpcIkFcIixcIuG6oVwiOlwiYVwiLFwi4bqiXCI6XCJBXCIsXCLhuqNcIjpcImFcIixcIuG6pFwiOlwiQVwiLFwi4bqlXCI6XCJhXCIsXCLhuqZcIjpcIkFcIixcIuG6p1wiOlwiYVwiLFwi4bqoXCI6XCJBXCIsXCLhuqlcIjpcImFcIixcIuG6qlwiOlwiQVwiLFwi4bqrXCI6XCJhXCIsXCLhuqxcIjpcIkFcIixcIuG6rVwiOlwiYVwiLFwi4bquXCI6XCJBXCIsXCLhuq9cIjpcImFcIixcIuG6sFwiOlwiQVwiLFwi4bqxXCI6XCJhXCIsXCLhurJcIjpcIkFcIixcIuG6s1wiOlwiYVwiLFwi4bq0XCI6XCJBXCIsXCLhurVcIjpcImFcIixcIuG6tlwiOlwiQVwiLFwi4bq3XCI6XCJhXCIsXCLhurhcIjpcIkVcIixcIuG6uVwiOlwiZVwiLFwi4bq6XCI6XCJFXCIsXCLhurtcIjpcImVcIixcIuG6vFwiOlwiRVwiLFwi4bq9XCI6XCJlXCIsXCLhur5cIjpcIkVcIixcIuG6v1wiOlwiZVwiLFwi4buAXCI6XCJFXCIsXCLhu4FcIjpcImVcIixcIuG7glwiOlwiRVwiLFwi4buDXCI6XCJlXCIsXCLhu4RcIjpcIkVcIixcIuG7hVwiOlwiZVwiLFwi4buGXCI6XCJFXCIsXCLhu4dcIjpcImVcIixcIuG7iFwiOlwiSVwiLFwi4buJXCI6XCJpXCIsXCLhu4pcIjpcIklcIixcIuG7i1wiOlwiaVwiLFwi4buMXCI6XCJPXCIsXCLhu41cIjpcIm9cIixcIuG7jlwiOlwiT1wiLFwi4buPXCI6XCJvXCIsXCLhu5BcIjpcIk9cIixcIuG7kVwiOlwib1wiLFwi4buSXCI6XCJPXCIsXCLhu5NcIjpcIm9cIixcIuG7lFwiOlwiT1wiLFwi4buVXCI6XCJvXCIsXCLhu5ZcIjpcIk9cIixcIuG7l1wiOlwib1wiLFwi4buYXCI6XCJPXCIsXCLhu5lcIjpcIm9cIixcIuG7mlwiOlwiT1wiLFwi4bubXCI6XCJvXCIsXCLhu5xcIjpcIk9cIixcIuG7nVwiOlwib1wiLFwi4bueXCI6XCJPXCIsXCLhu59cIjpcIm9cIixcIuG7oFwiOlwiT1wiLFwi4buhXCI6XCJvXCIsXCLhu6JcIjpcIk9cIixcIuG7o1wiOlwib1wiLFwi4bukXCI6XCJVXCIsXCLhu6VcIjpcInVcIixcIuG7plwiOlwiVVwiLFwi4bunXCI6XCJ1XCIsXCLhu6hcIjpcIlVcIixcIuG7qVwiOlwidVwiLFwi4buqXCI6XCJVXCIsXCLhu6tcIjpcInVcIixcIuG7rFwiOlwiVVwiLFwi4butXCI6XCJ1XCIsXCLhu65cIjpcIlVcIixcIuG7r1wiOlwidVwiLFwi4buwXCI6XCJVXCIsXCLhu7FcIjpcInVcIixcIuG7slwiOlwiWVwiLFwi4buzXCI6XCJ5XCIsXCLhu7RcIjpcIllcIixcIuG7tVwiOlwieVwiLFwi4bu2XCI6XCJZXCIsXCLhu7dcIjpcInlcIixcIuG7uFwiOlwiWVwiLFwi4bu5XCI6XCJ5XCIsXCLigJhcIjpcIlxcJ1wiLFwi4oCZXCI6XCJcXCdcIixcIuKAnFwiOlwiXFxcXFxcXCJcIixcIuKAnVwiOlwiXFxcXFxcXCJcIixcIuKAoFwiOlwiK1wiLFwi4oCiXCI6XCIqXCIsXCLigKZcIjpcIi4uLlwiLFwi4oKgXCI6XCJlY3VcIixcIuKColwiOlwiY3J1emVpcm9cIixcIuKCo1wiOlwiZnJlbmNoIGZyYW5jXCIsXCLigqRcIjpcImxpcmFcIixcIuKCpVwiOlwibWlsbFwiLFwi4oKmXCI6XCJuYWlyYVwiLFwi4oKnXCI6XCJwZXNldGFcIixcIuKCqFwiOlwicnVwZWVcIixcIuKCqVwiOlwid29uXCIsXCLigqpcIjpcIm5ldyBzaGVxdWVsXCIsXCLigqtcIjpcImRvbmdcIixcIuKCrFwiOlwiZXVyb1wiLFwi4oKtXCI6XCJraXBcIixcIuKCrlwiOlwidHVncmlrXCIsXCLigq9cIjpcImRyYWNobWFcIixcIuKCsFwiOlwicGVubnlcIixcIuKCsVwiOlwicGVzb1wiLFwi4oKyXCI6XCJndWFyYW5pXCIsXCLigrNcIjpcImF1c3RyYWxcIixcIuKCtFwiOlwiaHJ5dm5pYVwiLFwi4oK1XCI6XCJjZWRpXCIsXCLigrhcIjpcImthemFraHN0YW5pIHRlbmdlXCIsXCLigrlcIjpcImluZGlhbiBydXBlZVwiLFwi4oK6XCI6XCJ0dXJraXNoIGxpcmFcIixcIuKCvVwiOlwicnVzc2lhbiBydWJsZVwiLFwi4oK/XCI6XCJiaXRjb2luXCIsXCLihKBcIjpcInNtXCIsXCLihKJcIjpcInRtXCIsXCLiiIJcIjpcImRcIixcIuKIhlwiOlwiZGVsdGFcIixcIuKIkVwiOlwic3VtXCIsXCLiiJ5cIjpcImluZmluaXR5XCIsXCLimaVcIjpcImxvdmVcIixcIuWFg1wiOlwieXVhblwiLFwi5YaGXCI6XCJ5ZW5cIixcIu+3vFwiOlwicmlhbFwifScpXG4gIHZhciBsb2NhbGVzID0gSlNPTi5wYXJzZSgne1wiZGVcIjp7XCLDhFwiOlwiQUVcIixcIsOkXCI6XCJhZVwiLFwiw5ZcIjpcIk9FXCIsXCLDtlwiOlwib2VcIixcIsOcXCI6XCJVRVwiLFwiw7xcIjpcInVlXCJ9LFwidmlcIjp7XCLEkFwiOlwiRFwiLFwixJFcIjpcImRcIn19JylcblxuICBmdW5jdGlvbiByZXBsYWNlIChzdHJpbmcsIG9wdGlvbnMpIHtcbiAgICBpZiAodHlwZW9mIHN0cmluZyAhPT0gJ3N0cmluZycpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignc2x1Z2lmeTogc3RyaW5nIGFyZ3VtZW50IGV4cGVjdGVkJylcbiAgICB9XG5cbiAgICBvcHRpb25zID0gKHR5cGVvZiBvcHRpb25zID09PSAnc3RyaW5nJylcbiAgICAgID8ge3JlcGxhY2VtZW50OiBvcHRpb25zfVxuICAgICAgOiBvcHRpb25zIHx8IHt9XG5cbiAgICB2YXIgbG9jYWxlID0gbG9jYWxlc1tvcHRpb25zLmxvY2FsZV0gfHwge31cblxuICAgIHZhciByZXBsYWNlbWVudCA9IG9wdGlvbnMucmVwbGFjZW1lbnQgPT09IHVuZGVmaW5lZCA/ICctJyA6IG9wdGlvbnMucmVwbGFjZW1lbnRcblxuICAgIHZhciBzbHVnID0gc3RyaW5nLnNwbGl0KCcnKVxuICAgICAgLy8gcmVwbGFjZSBjaGFyYWN0ZXJzIGJhc2VkIG9uIGNoYXJNYXBcbiAgICAgIC5yZWR1Y2UoZnVuY3Rpb24gKHJlc3VsdCwgY2gpIHtcbiAgICAgICAgcmV0dXJuIHJlc3VsdCArIChsb2NhbGVbY2hdIHx8IGNoYXJNYXBbY2hdIHx8IGNoKVxuICAgICAgICAgIC8vIHJlbW92ZSBub3QgYWxsb3dlZCBjaGFyYWN0ZXJzXG4gICAgICAgICAgLnJlcGxhY2Uob3B0aW9ucy5yZW1vdmUgfHwgL1teXFx3XFxzJCpfK34uKCknXCIhXFwtOkBdKy9nLCAnJylcbiAgICAgIH0sICcnKVxuICAgICAgLy8gdHJpbSBsZWFkaW5nL3RyYWlsaW5nIHNwYWNlc1xuICAgICAgLnRyaW0oKVxuICAgICAgLy8gY29udmVydCBzcGFjZXMgdG8gcmVwbGFjZW1lbnQgY2hhcmFjdGVyXG4gICAgICAvLyBhbHNvIHJlbW92ZSBkdXBsaWNhdGVzIG9mIHRoZSByZXBsYWNlbWVudCBjaGFyYWN0ZXJcbiAgICAgIC5yZXBsYWNlKG5ldyBSZWdFeHAoJ1tcXFxccycgKyByZXBsYWNlbWVudCArICddKycsICdnJyksIHJlcGxhY2VtZW50KVxuXG4gICAgaWYgKG9wdGlvbnMubG93ZXIpIHtcbiAgICAgIHNsdWcgPSBzbHVnLnRvTG93ZXJDYXNlKClcbiAgICB9XG5cbiAgICBpZiAob3B0aW9ucy5zdHJpY3QpIHtcbiAgICAgIC8vIHJlbW92ZSBhbnl0aGluZyBiZXNpZGVzIGxldHRlcnMsIG51bWJlcnMsIGFuZCB0aGUgcmVwbGFjZW1lbnQgY2hhclxuICAgICAgc2x1ZyA9IHNsdWdcbiAgICAgICAgLnJlcGxhY2UobmV3IFJlZ0V4cCgnW15hLXpBLVowLTknICsgcmVwbGFjZW1lbnQgKyAnXScsICdnJyksICcnKVxuICAgICAgICAvLyByZW1vdmUgZHVwbGljYXRlcyBvZiB0aGUgcmVwbGFjZW1lbnQgY2hhcmFjdGVyXG4gICAgICAgIC5yZXBsYWNlKG5ldyBSZWdFeHAoJ1tcXFxccycgKyByZXBsYWNlbWVudCArICddKycsICdnJyksIHJlcGxhY2VtZW50KVxuICAgIH1cblxuICAgIHJldHVybiBzbHVnXG4gIH1cblxuICByZXBsYWNlLmV4dGVuZCA9IGZ1bmN0aW9uIChjdXN0b21NYXApIHtcbiAgICBmb3IgKHZhciBrZXkgaW4gY3VzdG9tTWFwKSB7XG4gICAgICBjaGFyTWFwW2tleV0gPSBjdXN0b21NYXBba2V5XVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXBsYWNlXG59KSlcbiIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdGlmKF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0pIHtcblx0XHRyZXR1cm4gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gbW9kdWxlWydkZWZhdWx0J10gOlxuXHRcdCgpID0+IG1vZHVsZTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApIiwiLy8gQ29uc3RhbnRzXG5leHBvcnQgY29uc3QgaXNQcm9kdWN0aW9uID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJztcbmV4cG9ydCBjb25zdCBsYW5kaW5nUGFnZUNvbnRlbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2xpY2tidXMtbGFuZGluZy1wYWdlLXdyYXBwZXInKTtcbmV4cG9ydCBjb25zdCBhY2NvcmRpb25UaXRsZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuYmYtYWNjb3JkaW9uLXRpdGxlJyk7XG5leHBvcnQgY29uc3QgYmFja1RvVG9wID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJmLWdvLXRvLXRvcCcpO1xuZXhwb3J0IGNvbnN0IGZpbHRlck9wdGlvbnNXcmFwcGVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2JmLWZpbHRlci1vcHRpb25zJyk7XG5leHBvcnQgY29uc3QgY2xvc2VGaWx0ZXJPcHRpb25zV3JhcHBlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5iZi1yZXR1cm4nKTtcbmV4cG9ydCBjb25zdCBvcGVuRmlsdGVyT3B0aW9uc1dyYXBwZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYmYtb3JpZ2luLXNlbGVjdCcpO1xuZXhwb3J0IGNvbnN0IGJvZHkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdib2R5Jyk7XG5leHBvcnQgY29uc3Qgcm91dGVzUHJpY2VzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmJmLXByaWNlcy1hbmQtZGF0ZXMnKTtcbmV4cG9ydCBjb25zdCBtYXNrTW9kYWxzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2JmLW1hc2stbW9kYWwnKTtcbmV4cG9ydCBjb25zdCBtb2RhbERhdGVzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2JmLW1vZGFsLWRhdGVzJyk7XG5leHBvcnQgY29uc3Qgb2tCdXR0b24gPSBtb2RhbERhdGVzID09PSBudWxsIHx8IG1vZGFsRGF0ZXMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG1vZGFsRGF0ZXMucXVlcnlTZWxlY3RvcignYnV0dG9uJyk7XG5leHBvcnQgY29uc3QgbGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5iZi1saXN0Jyk7XG5leHBvcnQgY29uc3QgZm9ybU9yaWdpbnMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYmYtdXBkYXRlLW9yaWdpbnMnKTtcbmV4cG9ydCBjb25zdCBhcHBseUJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhcHBseS1vcmlnaW5zLW9wdGlvbnMnKTtcbmV4cG9ydCBjb25zdCBhbGxPcmlnaW5zID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2JmLWFsbCcpO1xuZXhwb3J0IGNvbnN0IGNsZWFyT3JpZ2lucyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjbGVhci1vcmlnaW5zLW9wdGlvbnMnKTtcbmV4cG9ydCBjb25zdCByZXN1bHRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJmLXJlc3VsdHMnKTtcbmV4cG9ydCBjb25zdCB0cmlnZ2VyU2VsZWN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2JmLW9yaWdpbi1zZWxlY3Qgc3BhbicpO1xuZXhwb3J0IGNvbnN0IHRpdGxlTW9kYWwgPSBtb2RhbERhdGVzID09PSBudWxsIHx8IG1vZGFsRGF0ZXMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG1vZGFsRGF0ZXMucXVlcnlTZWxlY3RvcignaGVhZGVyIGgzIHNwYW4nKTtcbmV4cG9ydCBjb25zdCB0YWJsZUhlYWRSb3dEYXRlcyA9IG1vZGFsRGF0ZXMgPT09IG51bGwgfHwgbW9kYWxEYXRlcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogbW9kYWxEYXRlcy5xdWVyeVNlbGVjdG9yKCd0YWJsZSB0aGVhZCB0cicpO1xuZXhwb3J0IGNvbnN0IHRhYmxlRGF0ZXNCb2R5ID0gbW9kYWxEYXRlcyA9PT0gbnVsbCB8fCBtb2RhbERhdGVzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBtb2RhbERhdGVzLnF1ZXJ5U2VsZWN0b3IoJ3RhYmxlIHRib2R5Jyk7XG5leHBvcnQgY29uc3Qgc2VsZWN0U29ydCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdiZi1zb3J0Jyk7XG4iLCIvKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvYmFuLXRzLWNvbW1lbnQgKi9cbmltcG9ydCBzbHVnaWZ5IGZyb20gJ3NsdWdpZnknO1xuaW1wb3J0IHsgbGlzdCwgdGFibGVEYXRlc0JvZHksIG1vZGFsRGF0ZXMsIG1hc2tNb2RhbHMsIGZvcm1PcmlnaW5zLCBjbGVhck9yaWdpbnMsIGFwcGx5QnV0dG9uLCBhbGxPcmlnaW5zLCBmaWx0ZXJPcHRpb25zV3JhcHBlciwgdHJpZ2dlclNlbGVjdCwgYm9keSwgcmVzdWx0cywgdGl0bGVNb2RhbCwgc2VsZWN0U29ydCwgfSBmcm9tICcuLi9jb25zdGFudHMnO1xuY29uc3QgQ0hFQ0tCT1hfQUxMID0gJ2JmLWFsbCc7XG5jb25zdCBBTEwgPSAnVG9kYXMnO1xuY29uc3QgaGlkZUZpbHRlck9wdGlvbnNXcmFwcGVyID0gKHJldHVyblRvID0gZmFsc2UpID0+IHtcbiAgICBmaWx0ZXJPcHRpb25zV3JhcHBlciA9PT0gbnVsbCB8fCBmaWx0ZXJPcHRpb25zV3JhcHBlciA9PT0gdm9pZCAwID8gdm9pZCAwIDogZmlsdGVyT3B0aW9uc1dyYXBwZXIuY2xhc3NMaXN0LnJlbW92ZSgnYmYtYWN0aXZlJyk7XG4gICAgYm9keS5jbGFzc0xpc3QucmVtb3ZlKCduby1uYXZpZ2F0aW9uLWVuYWJsZWQnKTtcbiAgICBpZiAocmV0dXJuVG8pIHtcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICBzY3JvbGxUbyh7XG4gICAgICAgICAgICAgICAgbGVmdDogMCxcbiAgICAgICAgICAgICAgICB0b3A6IGxpc3QgPT09IG51bGwgfHwgbGlzdCA9PT0gdm9pZCAwID8gdm9pZCAwIDogbGlzdC5vZmZzZXRUb3AsXG4gICAgICAgICAgICAgICAgYmVoYXZpb3I6ICdzbW9vdGgnLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sIDUwMCk7XG4gICAgfVxufTtcbmNvbnN0IGhpZGVNb2RhbCA9ICgpID0+IHtcbiAgICBtb2RhbERhdGVzID09PSBudWxsIHx8IG1vZGFsRGF0ZXMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG1vZGFsRGF0ZXMuY2xhc3NMaXN0LnJlbW92ZSgnYmYtYWN0aXZlJyk7XG4gICAgbWFza01vZGFscyA9PT0gbnVsbCB8fCBtYXNrTW9kYWxzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBtYXNrTW9kYWxzLmNsYXNzTGlzdC5yZW1vdmUoJ2JmLWFjdGl2ZScpO1xuICAgIGJvZHkuY2xhc3NMaXN0LnJlbW92ZSgnbm8tbmF2aWdhdGlvbi1lbmFibGVkJyk7XG59O1xuY29uc3Qgc2hvd01vZGFsID0gKCkgPT4ge1xuICAgIG1vZGFsRGF0ZXMgPT09IG51bGwgfHwgbW9kYWxEYXRlcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogbW9kYWxEYXRlcy5jbGFzc0xpc3QuYWRkKCdiZi1hY3RpdmUnKTtcbiAgICBtYXNrTW9kYWxzID09PSBudWxsIHx8IG1hc2tNb2RhbHMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG1hc2tNb2RhbHMuY2xhc3NMaXN0LmFkZCgnYmYtYWN0aXZlJyk7XG4gICAgYm9keS5jbGFzc0xpc3QuYWRkKCduby1uYXZpZ2F0aW9uLWVuYWJsZWQnKTtcbn07XG5jb25zdCBjdXRUZXh0ID0gKHRleHQpID0+IHRleHQubGVuZ3RoID49IDIwID8gdGV4dC5zcGxpdCgnLCcpWzBdLmNvbmNhdCgnIC4uLicpIDogdGV4dDtcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENhcmRPZmZlcnMge1xuICAgIGNvbnN0cnVjdG9yKHsgcm91dGVzLCBvcmlnaW5zIH0pIHtcbiAgICAgICAgdGhpcy5jb2xsYXRvciA9IG5ldyBJbnRsLkNvbGxhdG9yKCdwdC1CUicsIHtcbiAgICAgICAgICAgIG51bWVyaWM6IHRydWUsXG4gICAgICAgICAgICBzZW5zaXRpdml0eTogJ2Jhc2UnLFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5vcmlnaW5zU2VsZWN0ZWQgPSAwO1xuICAgICAgICB0aGlzLnJvdXRlcyA9IHJvdXRlcztcbiAgICAgICAgdGhpcy5vcmlnaW5zID0gb3JpZ2lucztcbiAgICAgICAgdGhpcy5vcmlnaW5zVG90YWwgPSBvcmlnaW5zLmxlbmd0aDtcbiAgICAgICAgdGhpcy5yZW5kZXIoKTtcbiAgICAgICAgdGhpcy5yZW5kZXJDaGVja2JveCgpO1xuICAgICAgICB0aGlzLmdlbmVyYXRlU2VsZWN0ZWRRdWFudGl0eSh0aGlzLm9yaWdpbnNUb3RhbCk7XG4gICAgICAgIHRoaXMuYXR0YWNoQXBwbHlCdXR0b25FdmVudHMoKTtcbiAgICB9XG4gICAgdXBkYXRlRE9NU2VsZWN0b3JzKG5leHQpIHtcbiAgICAgICAgdGhpcy5kb20gPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHRoaXMuZG9tKSwgbmV4dCk7XG4gICAgfVxuICAgIHNldE9yaWdpbnNTZWxlY3RlZChjdXJyZW50U2VsZWN0ZWQpIHtcbiAgICAgICAgdGhpcy5vcmlnaW5zU2VsZWN0ZWQgPSBjdXJyZW50U2VsZWN0ZWQ7XG4gICAgfVxuICAgIHJlc2V0T3JpZ2luc1NlbGVjdGVkKCkge1xuICAgICAgICB0aGlzLnNldE9yaWdpbnNTZWxlY3RlZCgwKTtcbiAgICB9XG4gICAgc2VsZWN0QWxsT3JpZ2lucygpIHtcbiAgICAgICAgaWYgKHRoaXMub3JpZ2luc1NlbGVjdGVkICE9PSB0aGlzLm9yaWdpbnNUb3RhbCkge1xuICAgICAgICAgICAgdGhpcy5kb20uY2hlY2tib3hlcy5mb3JFYWNoKChpbnB1dCkgPT4gKGlucHV0LmNoZWNrZWQgPSB0cnVlKSk7XG4gICAgICAgICAgICB0aGlzLnNldE9yaWdpbnNTZWxlY3RlZCh0aGlzLm9yaWdpbnNUb3RhbCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5jbGVhckNoZWNrYm94T3B0aW9ucygpO1xuICAgIH1cbiAgICB0b2dnbGVBcHBseUJ1dHRvbkVuYWJsaW5nKHN0YXR1cykge1xuICAgICAgICBpZiAoc3RhdHVzKVxuICAgICAgICAgICAgcmV0dXJuIGFwcGx5QnV0dG9uID09PSBudWxsIHx8IGFwcGx5QnV0dG9uID09PSB2b2lkIDAgPyB2b2lkIDAgOiBhcHBseUJ1dHRvbi5yZW1vdmVBdHRyaWJ1dGUoJ2Rpc2FibGVkJyk7XG4gICAgICAgIGFwcGx5QnV0dG9uID09PSBudWxsIHx8IGFwcGx5QnV0dG9uID09PSB2b2lkIDAgPyB2b2lkIDAgOiBhcHBseUJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2Rpc2FibGVkJywgJ3RydWUnKTtcbiAgICB9XG4gICAgdG9nZ2xlQXBwbHlCdXR0b25CeVNlbGVjdGVkKCkge1xuICAgICAgICBpZiAodGhpcy5vcmlnaW5zU2VsZWN0ZWQgPiAwKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy50b2dnbGVBcHBseUJ1dHRvbkVuYWJsaW5nKHRydWUpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMudG9nZ2xlQXBwbHlCdXR0b25FbmFibGluZyhmYWxzZSk7XG4gICAgfVxuICAgIGNsZWFyQ2hlY2tib3hPcHRpb25zKCkge1xuICAgICAgICB0aGlzLmRvbS5jaGVja2JveGVzLmZvckVhY2goKGlucHV0KSA9PiAoaW5wdXQuY2hlY2tlZCA9IGZhbHNlKSk7XG4gICAgICAgIHRoaXMudG9nZ2xlQXBwbHlCdXR0b25FbmFibGluZyhmYWxzZSk7XG4gICAgICAgIHRoaXMucmVzZXRPcmlnaW5zU2VsZWN0ZWQoKTtcbiAgICB9XG4gICAgcmVuZGVyQ2hlY2tib3goKSB7XG4gICAgICAgIHRoaXMub3JpZ2lucy5mb3JFYWNoKChvcmlnaW4pID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHNsdWcgPSBzbHVnaWZ5KG9yaWdpbik7XG4gICAgICAgICAgICBjb25zdCBvdXRwdXQgPSBgXG4gICAgICA8bGFiZWwgY2xhc3M9XCJiZi1sYWJlbC1zZWxlY3RvclwiIGZvcj1cIiR7c2x1Z31cIj5cbiAgICAgICAgICAke29yaWdpbn1cbiAgICAgICAgICA8aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgdmFsdWU9XCIke29yaWdpbn1cIiBpZD1cIiR7c2x1Z31cIj5cbiAgICAgICAgICA8c3Bhbj48L3NwYW4+XG4gICAgICA8L2xhYmVsPmA7XG4gICAgICAgICAgICBmb3JtT3JpZ2lucyA9PT0gbnVsbCB8fCBmb3JtT3JpZ2lucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogZm9ybU9yaWdpbnMuaW5zZXJ0QWRqYWNlbnRIVE1MKCdiZWZvcmVlbmQnLCBvdXRwdXQpO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy51cGRhdGVET01TZWxlY3RvcnMoe1xuICAgICAgICAgICAgb3JpZ2luU2VsZWN0b3JzOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcjYmYtdXBkYXRlLW9yaWdpbnMgbGFiZWwnKSxcbiAgICAgICAgICAgIGNoZWNrYm94ZXM6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5iZi1sYWJlbC1zZWxlY3RvciBpbnB1dCcpLFxuICAgICAgICB9KTtcbiAgICAgICAgY2xlYXJPcmlnaW5zID09PSBudWxsIHx8IGNsZWFyT3JpZ2lucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogY2xlYXJPcmlnaW5zLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5jbGVhckNoZWNrYm94T3B0aW9ucygpO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5hdHRhY2hDaGVja2JveEV2ZW50cygpO1xuICAgIH1cbiAgICB0b2dnbGVDaGVja2JveEFsbFNlbGVjdGVkKCkge1xuICAgICAgICBpZiAodGhpcy5vcmlnaW5zU2VsZWN0ZWQgPT09IHRoaXMub3JpZ2luc1RvdGFsKSB7XG4gICAgICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgICAgICBhbGxPcmlnaW5zID09PSBudWxsIHx8IGFsbE9yaWdpbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGFsbE9yaWdpbnMuY2hlY2tlZCA9IHRydWU7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICBhbGxPcmlnaW5zID09PSBudWxsIHx8IGFsbE9yaWdpbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGFsbE9yaWdpbnMuY2hlY2tlZCA9IGZhbHNlO1xuICAgIH1cbiAgICBhdHRhY2hDaGVja2JveEV2ZW50cygpIHtcbiAgICAgICAgdGhpcy51cGRhdGVET01TZWxlY3RvcnMoe1xuICAgICAgICAgICAgY2hlY2tib3hlczogZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmJmLWxhYmVsLXNlbGVjdG9yIGlucHV0JyksXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmRvbS5vcmlnaW5TZWxlY3RvcnMuZm9yRWFjaCgoc2VsZWN0b3IpID0+IHtcbiAgICAgICAgICAgIHNlbGVjdG9yLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsICgpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBpdGVtID0gc2VsZWN0b3IuZ2V0QXR0cmlidXRlKCdmb3InKTtcbiAgICAgICAgICAgICAgICBjb25zdCB0YXJnZXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpdGVtKTtcbiAgICAgICAgICAgICAgICBjb25zdCBpc0NoZWNrZWQgPSB0YXJnZXQuY2hlY2tlZDtcbiAgICAgICAgICAgICAgICBpZiAoaXRlbSA9PT0gQ0hFQ0tCT1hfQUxMKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0QWxsT3JpZ2lucygpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzQ2hlY2tlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRPcmlnaW5zU2VsZWN0ZWQodGhpcy5vcmlnaW5zU2VsZWN0ZWQgKyAxKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0T3JpZ2luc1NlbGVjdGVkKHRoaXMub3JpZ2luc1NlbGVjdGVkIC0gMSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy50b2dnbGVBcHBseUJ1dHRvbkJ5U2VsZWN0ZWQoKTtcbiAgICAgICAgICAgICAgICB0aGlzLnRvZ2dsZUNoZWNrYm94QWxsU2VsZWN0ZWQoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgZ2VuZXJhdGVDdXJyZW50U3RhdGUoc2VsZWN0ZWQpIHtcbiAgICAgICAgY29uc3QgdGV4dCA9IHNlbGVjdGVkLmxlbmd0aCA9PT0gdGhpcy5vcmlnaW5zVG90YWxcbiAgICAgICAgICAgID8gQUxMXG4gICAgICAgICAgICA6IHNlbGVjdGVkLmxlbmd0aCA8PSAxXG4gICAgICAgICAgICAgICAgPyBzZWxlY3RlZFswXVxuICAgICAgICAgICAgICAgIDogYCR7Y3V0VGV4dChzZWxlY3RlZFswXSl9ICsgJHtzZWxlY3RlZC5sZW5ndGggLSAxfWA7XG4gICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgdHJpZ2dlclNlbGVjdCA9PT0gbnVsbCB8fCB0cmlnZ2VyU2VsZWN0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiB0cmlnZ2VyU2VsZWN0LmlubmVySFRNTCA9IHRleHQ7XG4gICAgfVxuICAgIGdlbmVyYXRlU2VsZWN0ZWRRdWFudGl0eShzZWxlY3RlZCkge1xuICAgICAgICBpZiAodHlwZW9mIHNlbGVjdGVkID09PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICAgICAgcmV0dXJuIChyZXN1bHRzID09PSBudWxsIHx8IHJlc3VsdHMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHJlc3VsdHMuaW5uZXJIVE1MID0gYCR7c2VsZWN0ZWR9ICR7c2VsZWN0ZWQgPT09IDEgPyAncmVzdWx0YWRvJyA6ICdyZXN1bHRhZG9zJ31gKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB0ZXh0ID0gYCR7c2VsZWN0ZWQubGVuZ3RofSAke3NlbGVjdGVkLmxlbmd0aCA9PT0gMSA/ICdyZXN1bHRhZG8nIDogJ3Jlc3VsdGFkb3MnfWA7XG4gICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgcmVzdWx0cyA9PT0gbnVsbCB8fCByZXN1bHRzID09PSB2b2lkIDAgPyB2b2lkIDAgOiByZXN1bHRzLmlubmVySFRNTCA9IHRleHQ7XG4gICAgfVxuICAgIHNob3dBbGxEYXRlcygpIHtcbiAgICAgICAgdGhpcy5kb20uc2hvd0FsbERhdGVzVHJpZ2dlcnMuZm9yRWFjaCgoYnV0dG9uKSA9PiB7XG4gICAgICAgICAgICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgaWQgPSBwYXJzZUludChidXR0b24uZ2V0QXR0cmlidXRlKCdkYXRhLXJvdXRlJykpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHNlbGVjdGVkID0gdGhpcy5yb3V0ZXMuZmlsdGVyKChyb3V0ZSkgPT4gcm91dGUuaWQgPT09IGlkKVswXTtcbiAgICAgICAgICAgICAgICBjb25zdCBvcmlnaW4gPSBzZWxlY3RlZC5vcmlnaW4uc3BsaXQoJywnKVswXTtcbiAgICAgICAgICAgICAgICBjb25zdCBkZXN0aW5hdGlvbiA9IHNlbGVjdGVkLmRlc3RpbmF0aW9uLnNwbGl0KCcsJylbMF07XG4gICAgICAgICAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICAgICAgICAgIHRpdGxlTW9kYWwuaW5uZXJIVE1MID0gYCR7b3JpZ2lufSB4ICR7ZGVzdGluYXRpb259YDtcbiAgICAgICAgICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgICAgICAgICAgdGFibGVEYXRlc0JvZHkuaW5uZXJIVE1MID0gJyc7XG4gICAgICAgICAgICAgICAgc2VsZWN0ZWQuYXZhaWxhYmxlRGF0ZXMuZm9yRWFjaCgoZGF0ZXMpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgb3V0cHV0ID0gYDx0cj4ke2RhdGVzXG4gICAgICAgICAgICAgICAgICAgICAgICAubWFwKChkYXRlKSA9PiBgPHRkPiR7ZGF0ZS5kYXRlfTwvdGQ+YClcbiAgICAgICAgICAgICAgICAgICAgICAgIC5qb2luKCcnKX08L3RyPmA7XG4gICAgICAgICAgICAgICAgICAgIHRhYmxlRGF0ZXNCb2R5ID09PSBudWxsIHx8IHRhYmxlRGF0ZXNCb2R5ID09PSB2b2lkIDAgPyB2b2lkIDAgOiB0YWJsZURhdGVzQm9keS5pbnNlcnRBZGphY2VudEhUTUwoJ2JlZm9yZWVuZCcsIG91dHB1dCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgc2hvd01vZGFsKCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHNvcnRJdGVtcyh0eXBlKSB7XG4gICAgICAgIGlmICh0eXBlID09PSAnZGVmYXVsdCcpXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5yZW5kZXIodGhpcy5jdXJyZW50Um91dGVzLCBmYWxzZSk7XG4gICAgICAgIGNvbnN0IGNvbXBhcmUgPSBbLi4udGhpcy5jdXJyZW50Um91dGVzXS5zb3J0KChhLCBiKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5jb2xsYXRvci5jb21wYXJlKGEucHJpY2UsIGIucHJpY2UpO1xuICAgICAgICB9KTtcbiAgICAgICAgY29uc3Qgc29ydGVkID0gdHlwZSA9PT0gJ3ByaWNlLWxvd2VyJyA/IGNvbXBhcmUgOiBjb21wYXJlLnJldmVyc2UoKTtcbiAgICAgICAgdGhpcy5yZW5kZXIoc29ydGVkLCBmYWxzZSk7XG4gICAgfVxuICAgIHNhdmVJdGVtcygpIHtcbiAgICAgICAgdGhpcy51cGRhdGVET01TZWxlY3RvcnMoe1xuICAgICAgICAgICAgc2VsZWN0ZWRDaGVja2JveDogZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmJmLWxhYmVsLXNlbGVjdG9yIGlucHV0OmNoZWNrZWQnKSxcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IHNlbGVjdGVkID0gQXJyYXkuZnJvbSh0aGlzLmRvbS5zZWxlY3RlZENoZWNrYm94KVxuICAgICAgICAgICAgLmZpbHRlcigoaW5wdXQpID0+IGlucHV0LmdldEF0dHJpYnV0ZSgnaWQnKSAhPT0gQ0hFQ0tCT1hfQUxMKVxuICAgICAgICAgICAgLm1hcCgoaW5wdXQpID0+IGlucHV0LnZhbHVlKTtcbiAgICAgICAgY29uc3QgY2FyZHMgPSBzZWxlY3RlZC5sZW5ndGggPT09IHRoaXMub3JpZ2luc1RvdGFsIHx8IHNlbGVjdGVkLmxlbmd0aCA9PT0gMFxuICAgICAgICAgICAgPyB0aGlzLnJvdXRlc1xuICAgICAgICAgICAgOiB0aGlzLnJvdXRlcy5maWx0ZXIoKHJvdXRlKSA9PiBzZWxlY3RlZC5pbmNsdWRlcyhyb3V0ZS5vcmlnaW4pKTtcbiAgICAgICAgY29uc3QgY3VycmVudFNvcnQgPSBzZWxlY3RTb3J0LnZhbHVlO1xuICAgICAgICB0aGlzLnJlbmRlcihjYXJkcyk7XG4gICAgICAgIHRoaXMuc29ydEl0ZW1zKGN1cnJlbnRTb3J0KTtcbiAgICAgICAgdGhpcy5nZW5lcmF0ZUN1cnJlbnRTdGF0ZShzZWxlY3RlZCk7XG4gICAgICAgIHRoaXMuZ2VuZXJhdGVTZWxlY3RlZFF1YW50aXR5KHNlbGVjdGVkKTtcbiAgICAgICAgaGlkZUZpbHRlck9wdGlvbnNXcmFwcGVyKHRydWUpO1xuICAgIH1cbiAgICBhdHRhY2hBcHBseUJ1dHRvbkV2ZW50cygpIHtcbiAgICAgICAgYXBwbHlCdXR0b24gPT09IG51bGwgfHwgYXBwbHlCdXR0b24gPT09IHZvaWQgMCA/IHZvaWQgMCA6IGFwcGx5QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5zYXZlSXRlbXMoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJlbmRlcihjdXJyZW50Um91dGVzID0gdGhpcy5yb3V0ZXMsIHVwZGF0ZSA9IHRydWUpIHtcbiAgICAgICAgaWYgKHVwZGF0ZSlcbiAgICAgICAgICAgIHRoaXMuY3VycmVudFJvdXRlcyA9IGN1cnJlbnRSb3V0ZXM7XG4gICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgbGlzdCA9PT0gbnVsbCB8fCBsaXN0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBsaXN0LmlubmVySFRNTCA9ICcnO1xuICAgICAgICBjdXJyZW50Um91dGVzLmZvckVhY2goKHJvdXRlKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBodG1sID0gYDxsaT5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiYmYtb3JpZ2luLWRlc3RpbmF0aW9uXCI+XG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiYmYtb3JpZ2luXCI+XG4gICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cImljb24tb3JpZ2luXCI+PC9pPlxuICAgICAgICAgICAgICAgICAgJHtyb3V0ZS5vcmlnaW59XG4gICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJiZi1kZXN0aW5hdGlvblwiPlxuICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJpY29uLWRlc3RpbmF0aW9uXCI+PC9pPlxuICAgICAgICAgICAgICAgICAgJHtyb3V0ZS5kZXN0aW5hdGlvbn1cbiAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwhLS0gLy5iZi1vcmlnaW4tZGVzdGluYXRpb24gLS0+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cImJmLXByaWNlcy1hbmQtZGF0ZXNcIj5cbiAgICAgICAgICAgICAgPHNwYW4+UiQgJHtyb3V0ZS5wcmljZX08L3NwYW4+XG4gICAgICAgICAgICAgIDxidXR0b24gZGF0YS1yb3V0ZT1cIiR7cm91dGUuaWR9XCIgdHlwZT1cImJ1dHRvblwiPlZlciBkYXRhczwvYnV0dG9uPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwhLS0gLy5iZi1wcmljZXMtYW5kLWRhdGVzIC0tPlxuICAgICAgPC9saT5gO1xuICAgICAgICAgICAgbGlzdCA9PT0gbnVsbCB8fCBsaXN0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBsaXN0Lmluc2VydEFkamFjZW50SFRNTCgnYmVmb3JlZW5kJywgaHRtbCk7XG4gICAgICAgICAgICB0aGlzLnVwZGF0ZURPTVNlbGVjdG9ycyh7XG4gICAgICAgICAgICAgICAgc2hvd0FsbERhdGVzVHJpZ2dlcnM6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5iZi1wcmljZXMtYW5kLWRhdGVzIGJ1dHRvbicpLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnVwZGF0ZURPTVNlbGVjdG9ycyh7XG4gICAgICAgICAgICBzaG93QWxsRGF0ZXNUcmlnZ2VyczogZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmJmLXByaWNlcy1hbmQtZGF0ZXMgYnV0dG9uJyksXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnNob3dBbGxEYXRlcygpO1xuICAgICAgICBzZWxlY3RTb3J0ID09PSBudWxsIHx8IHNlbGVjdFNvcnQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHNlbGVjdFNvcnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBzZWxlY3RTb3J0LnZhbHVlO1xuICAgICAgICAgICAgdGhpcy5zb3J0SXRlbXModmFsdWUpO1xuICAgICAgICB9KTtcbiAgICB9XG59XG4iLCIvLyBNYWluIENTU1xuaW1wb3J0ICcuL3N0eWxlcy9hcHAuc2Nzcyc7XG5pbXBvcnQgQ2FyZE9mZmVycyBmcm9tICcuL2NvbXBvbmVudHMvQ2FyZE9mZmVycyc7XG5pbXBvcnQgeyBpc1Byb2R1Y3Rpb24sIGFjY29yZGlvblRpdGxlcywgYmFja1RvVG9wLCBjbG9zZUZpbHRlck9wdGlvbnNXcmFwcGVyLCBmaWx0ZXJPcHRpb25zV3JhcHBlciwgb3BlbkZpbHRlck9wdGlvbnNXcmFwcGVyLCBib2R5LCBtYXNrTW9kYWxzLCBva0J1dHRvbiwgbW9kYWxEYXRlcywgbGFuZGluZ1BhZ2VDb250ZW50LCB9IGZyb20gJy4vY29uc3RhbnRzJztcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvYmFuLXRzLWNvbW1lbnRcbi8vIEB0cy1pZ25vcmVcbmNvbnN0IGFsbFJvdXRlcyA9IHJvdXRlcztcbmNvbnN0IG9yaWdpbnMgPSBhbGxSb3V0ZXMubWFwKChyb3V0ZSkgPT4gcm91dGUub3JpZ2luKTtcbmNvbnN0IHJ1bkxhbmRpbmdQYWdlQXBwbGljYXRpb24gPSAoKSA9PiB7XG4gICAgaWYgKCFpc1Byb2R1Y3Rpb24pXG4gICAgICAgIGNvbnNvbGUubG9nKCdBcHBsaWNhdGlvbiBydW5uaW5nLi4uJyk7XG4gICAgLy8gQ2FyZCBPZmZlcnNcbiAgICBuZXcgQ2FyZE9mZmVycyh7IHJvdXRlczogYWxsUm91dGVzLCBvcmlnaW5zIH0pO1xuICAgIC8vIEFjY29yZGlvbnNcbiAgICBhY2NvcmRpb25UaXRsZXMuZm9yRWFjaCgodGl0bGUpID0+IHtcbiAgICAgICAgdGl0bGUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgICAgICB2YXIgX2E7XG4gICAgICAgICAgICB0aXRsZS5jbGFzc0xpc3QudG9nZ2xlKCdiZi1hY3RpdmUnKTtcbiAgICAgICAgICAgIChfYSA9IHRpdGxlLm5leHRFbGVtZW50U2libGluZykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNsYXNzTGlzdC50b2dnbGUoJ2JmLWFjdGl2ZScpO1xuICAgICAgICB9KTtcbiAgICB9KTtcbiAgICAvLyBCYWNrIHRvIHRvcFxuICAgIGJhY2tUb1RvcCA9PT0gbnVsbCB8fCBiYWNrVG9Ub3AgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGJhY2tUb1RvcC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgc2Nyb2xsVG8oe1xuICAgICAgICAgICAgbGVmdDogMCxcbiAgICAgICAgICAgIHRvcDogMCxcbiAgICAgICAgICAgIGJlaGF2aW9yOiAnc21vb3RoJyxcbiAgICAgICAgfSk7XG4gICAgfSk7XG4gICAgLy8gQ2xvc2UgV3JhcHBlclxuICAgIGNsb3NlRmlsdGVyT3B0aW9uc1dyYXBwZXIgPT09IG51bGwgfHwgY2xvc2VGaWx0ZXJPcHRpb25zV3JhcHBlciA9PT0gdm9pZCAwID8gdm9pZCAwIDogY2xvc2VGaWx0ZXJPcHRpb25zV3JhcHBlci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgZmlsdGVyT3B0aW9uc1dyYXBwZXIgPT09IG51bGwgfHwgZmlsdGVyT3B0aW9uc1dyYXBwZXIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGZpbHRlck9wdGlvbnNXcmFwcGVyLmNsYXNzTGlzdC5yZW1vdmUoJ2JmLWFjdGl2ZScpO1xuICAgICAgICBib2R5LmNsYXNzTGlzdC5yZW1vdmUoJ25vLW5hdmlnYXRpb24tZW5hYmxlZCcpO1xuICAgIH0pO1xuICAgIC8vIE9wZW4gV3JhcHBlclxuICAgIG9wZW5GaWx0ZXJPcHRpb25zV3JhcHBlciA9PT0gbnVsbCB8fCBvcGVuRmlsdGVyT3B0aW9uc1dyYXBwZXIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wZW5GaWx0ZXJPcHRpb25zV3JhcHBlci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgZmlsdGVyT3B0aW9uc1dyYXBwZXIgPT09IG51bGwgfHwgZmlsdGVyT3B0aW9uc1dyYXBwZXIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGZpbHRlck9wdGlvbnNXcmFwcGVyLmNsYXNzTGlzdC5hZGQoJ2JmLWFjdGl2ZScpO1xuICAgICAgICBib2R5LmNsYXNzTGlzdC5hZGQoJ25vLW5hdmlnYXRpb24tZW5hYmxlZCcpO1xuICAgIH0pO1xuICAgIC8vIE9wZW4gTW9kYWxzXG4gICAgLy8gcm91dGVzUHJpY2VzPy5mb3JFYWNoKChyb3V0ZSkgPT4ge1xuICAgIC8vICAgcm91dGUucXVlcnlTZWxlY3RvcignYnV0dG9uJyk/LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcbiAgICAvLyAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIC8vICAgICBtYXNrTW9kYWxzPy5jbGFzc0xpc3QuYWRkKCdiZi1hY3RpdmUnKTtcbiAgICAvLyAgICAgbW9kYWxEYXRlcz8uY2xhc3NMaXN0LmFkZCgnYmYtYWN0aXZlJyk7XG4gICAgLy8gICAgIGJvZHkuY2xhc3NMaXN0LmFkZCgnbm8tbmF2aWdhdGlvbi1lbmFibGVkJyk7XG4gICAgLy8gICB9KTtcbiAgICAvLyB9KTtcbiAgICAvLyBDbG9zZSBNb2RhbHNcbiAgICBva0J1dHRvbiA9PT0gbnVsbCB8fCBva0J1dHRvbiA9PT0gdm9pZCAwID8gdm9pZCAwIDogb2tCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIG1hc2tNb2RhbHMgPT09IG51bGwgfHwgbWFza01vZGFscyA9PT0gdm9pZCAwID8gdm9pZCAwIDogbWFza01vZGFscy5jbGFzc0xpc3QucmVtb3ZlKCdiZi1hY3RpdmUnKTtcbiAgICAgICAgbW9kYWxEYXRlcyA9PT0gbnVsbCB8fCBtb2RhbERhdGVzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBtb2RhbERhdGVzLmNsYXNzTGlzdC5yZW1vdmUoJ2JmLWFjdGl2ZScpO1xuICAgICAgICBib2R5LmNsYXNzTGlzdC5yZW1vdmUoJ25vLW5hdmlnYXRpb24tZW5hYmxlZCcpO1xuICAgIH0pO1xufTtcbmlmICghbGFuZGluZ1BhZ2VDb250ZW50KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFtcbiAgICAgICAgXCJUaGUgcGFnZSdzIG1haW4gd3JhcHBlciBjb3VsZCBub3QgYmUgZm91bmQuIFBsZWFzZSB3cmFwIHRoZSBlbnRpcmVcIixcbiAgICAgICAgJ2FwcGxpY2F0aW9uIHdpdGhpbiBhbiBlbGVtZW50IHdpdGggaWQgXCIjY2xpY2tidXMtbGFuZGluZy1wYWdlLXdyYXBwZXJcIi4nLFxuICAgICAgICAnU28gd2UgZ3VhcmFudGVlIHRoYXQgd2Ugd2lsbCBub3QgaGF2ZSBhbnkga2luZCBvZiBjb25mbGljdC4nLFxuICAgIF0uam9pbignICcpKTtcbn1cbnJ1bkxhbmRpbmdQYWdlQXBwbGljYXRpb24oKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=